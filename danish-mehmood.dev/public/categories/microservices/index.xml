<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>microservices - Category - danish-mehmood</title>
        <link>https://danish-mehmood.github.io/categories/microservices/</link>
        <description>microservices - Category - danish-mehmood</description>
        <generator>Hugo -- gohugo.io</generator><language>en-us</language><managingEditor>rdm355190@gmail.com (Danish Mehmood)</managingEditor>
            <webMaster>rdm355190@gmail.com (Danish Mehmood)</webMaster><lastBuildDate>Thu, 26 Dec 2024 01:46:08 &#43;0500</lastBuildDate><atom:link href="https://danish-mehmood.github.io/categories/microservices/" rel="self" type="application/rss+xml" /><item>
    <title>Microservices Architecture Deep Dive Part Six: Distributed Transactions</title>
    <link>https://danish-mehmood.github.io/microservices-architecture-deep-dive-part-six-distributed-transactions/</link>
    <pubDate>Thu, 26 Dec 2024 01:46:08 &#43;0500</pubDate>
    <author>danish mehmood</author>
    <guid>https://danish-mehmood.github.io/microservices-architecture-deep-dive-part-six-distributed-transactions/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/images/posts/microservices/partsix/featuredimage.webp" referrerpolicy="no-referrer">
            </div>]]></description>
</item>
<item>
    <title>Microservices Architecture Deep Dive Part Five: Service Mesh</title>
    <link>https://danish-mehmood.github.io/microservices-architecture-deep-dive-part-five-service-mesh/</link>
    <pubDate>Mon, 09 Dec 2024 23:19:42 &#43;0500</pubDate>
    <author>danish mehmood</author>
    <guid>https://danish-mehmood.github.io/microservices-architecture-deep-dive-part-five-service-mesh/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/images/posts/microservices/partfive/featuredimage.gif" referrerpolicy="no-referrer">
            </div>Table Of Contents <i class="fa-solid fa-arrow-right-long" aria-hidden="true"></i>&nbsp;Part 1 - Microservices Architecture Deep Dive
<i class="fa-solid fa-arrow-right-long" aria-hidden="true"></i>&nbsp;Part 2 - API Gateways and Backend For Frontend Pattern
<i class="fa-solid fa-arrow-right-long" aria-hidden="true"></i>&nbsp;Part 3 - Microservices Communication
<i class="fa-solid fa-arrow-right-long" aria-hidden="true"></i>&nbsp;Part 4 - Service Discovery
<i class="fa-solid fa-arrow-right-long" aria-hidden="true"></i>&nbsp;Part 5 - Service Mesh <i class="fa-solid fa-arrow-left-long" aria-hidden="true"></i>&nbsp;you are here <i class="fa-solid fa-location-crosshairs" aria-hidden="true"></i>
<i class="fa-solid fa-arrow-right-long" aria-hidden="true"></i>&nbsp;Part 5 - Distributed Transactions
The Problem Imagine you are working with a microservices architecture and you have 10s of services running, And these services work together by communicating with each other to achieve a goal.]]></description>
</item>
<item>
    <title>Microservices Architecture Deep Dive Part Four: Service Discovery</title>
    <link>https://danish-mehmood.github.io/microservices-architecture-deep-dive-part-four-service-discovery/</link>
    <pubDate>Thu, 05 Dec 2024 23:10:52 &#43;0500</pubDate>
    <author>danish mehmood</author>
    <guid>https://danish-mehmood.github.io/microservices-architecture-deep-dive-part-four-service-discovery/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/images/posts/microservices/partfour/featuredimage.jpg" referrerpolicy="no-referrer">
            </div>Table Of Contents <i class="fa-solid fa-arrow-right-long" aria-hidden="true"></i>&nbsp;Part 1 - Microservices Architecture Deep Dive
<i class="fa-solid fa-arrow-right-long" aria-hidden="true"></i>&nbsp;Part 2 - API Gateways and Backend For Frontend Pattern
<i class="fa-solid fa-arrow-right-long" aria-hidden="true"></i>&nbsp;Part 3 - Microservices Communication
<i class="fa-solid fa-arrow-right-long" aria-hidden="true"></i>&nbsp;Part 4 - Service Discovery <i class="fa-solid fa-arrow-left-long" aria-hidden="true"></i>&nbsp;you are here <i class="fa-solid fa-location-crosshairs" aria-hidden="true"></i>
<i class="fa-solid fa-arrow-right-long" aria-hidden="true"></i>&nbsp;Part 5 - Service Mesh
<i class="fa-solid fa-arrow-right-long" aria-hidden="true"></i>&nbsp;Part 5 - Distributed Transactions
The Problem As i discussed in the last blog post, the communication patterns in microservices are way different than the patterns in monoliths, in monoliths the modules communicate using method calls but in case of microservices, services communicate using the network calls.]]></description>
</item>
<item>
    <title>Microservices Architecture Deep Dive Part Three: Communications</title>
    <link>https://danish-mehmood.github.io/microservices-architecture-deep-dive-part-three-communications/</link>
    <pubDate>Wed, 04 Dec 2024 20:02:43 &#43;0500</pubDate>
    <author>danish mehmood</author>
    <guid>https://danish-mehmood.github.io/microservices-architecture-deep-dive-part-three-communications/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/images/posts/microservices/partthree/featuredimage.gif" referrerpolicy="no-referrer">
            </div>In this blog post i discuss, How microservices communicate, and what are the common patterns followed, this post would be a primer, I will go deeper in to the different patterns in future posts]]></description>
</item>
<item>
    <title>Microservices Architecture Deep Dive Part Two : API Gateways and Backend For Frontend Pattern</title>
    <link>https://danish-mehmood.github.io/microservices-architecture-deep-dive-part-two--api-gateways-and-bff-pattern/</link>
    <pubDate>Tue, 03 Dec 2024 01:18:25 &#43;0500</pubDate>
    <author>danish mehmood</author>
    <guid>https://danish-mehmood.github.io/microservices-architecture-deep-dive-part-two--api-gateways-and-bff-pattern/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/images/posts/microservices/parttwo/featuredimage.gif" referrerpolicy="no-referrer">
            </div><p>API gateway is a common pattern majority of microservices out in the world follow, to address some issues and Backend for frontend is a pattern which is a natural extension of API gateway pattern which helps the microservices scale very smoothly.</p>]]></description>
</item>
<item>
    <title>Microservices Architecture Deep Dive: Part One</title>
    <link>https://danish-mehmood.github.io/microservices-architecture-deep-dive-part-one/</link>
    <pubDate>Fri, 29 Nov 2024 08:08:47 &#43;0500</pubDate>
    <author>danish mehmood</author>
    <guid>https://danish-mehmood.github.io/microservices-architecture-deep-dive-part-one/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/images/posts/microservices/microservices_header.gif" referrerpolicy="no-referrer">
            </div><p><strong>Microservices</strong> are one of the most popular methodology to develop and deploy the software systems. In popularity it is
only second to <strong>Monoliths</strong> (or Modular Monoliths).</p>
<p>This blog series is all about microservices, how do they differ from monoliths, what are their pros and cons, when do they
make sense and how to implement microservices effectively.</p>]]></description>
</item>
</channel>
</rss>
